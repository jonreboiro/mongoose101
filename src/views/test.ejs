<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test Ikasleak API</title>
</head>
<body>
    <h1>Test Ikasleak API</h1>
    
    <button onclick="fetchIkasleak()">Get Ikasleak</button>
    <pre id="ikasleak"></pre>

    <h2>Create Ikasle</h2>
    <form onsubmit="event.preventDefault(); createIkasle();">
        <label for="izena">Izena:</label>
        <input type="text" id="izena" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="adina" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="email" required>
        <br>
        <button type="submit">Create</button>
    </form>
    <pre id="newIkasle"></pre>

    <h2>Delete Ikasle</h2>
    <form onsubmit="event.preventDefault(); deleteIkasleByID();">
        <label for="deleteId">IkasleID:</label>
        <input type="text" id="deleteId" required>
        <br>
        <button type="submit">Delete</button>
    </form>
    <pre id="deletedIkasle"></pre>

    <h2>Edit Ikasle</h2>
    <form onsubmit="event.preventDefault(); editIkasle();">
        <label for="ikasleEmail">Ikasle Email:</label>
        <select id="ikasleSelect" required>
            <option value="" disabled selected>Choose an ikasle</option>
        </select>
        <br>
        <label for="izena">Izena:</label>
        <input type="text" id="nameEdit" required>
        <br>
        <label for="adina">Adina:</label>
        <input type="number" id="ageEdit" required>
        <br>
        <label for="email">Email:</label>
        <input type="email" id="emailEdit" required>
        <br>
        <button type="submit">Edit</button>
        <pre id="editedIkasle"></pre>
    </form>


    <script>
        async function fetchIkasleak() {
            try {
                const response = await fetch('/api/ikasleak');
                if (!response.ok) throw new Error('Failed to fetch Ikasleak');
                const data = await response.json();
                document.getElementById('ikasleak').innerText = JSON.stringify(data, null, 2);
                const ikasleEmail = document.getElementById('ikasleSelect');
                ikasleEmail.innerHTML = '<option value = "" disabled selected> Choose an ikasle </option>';
                data.forEach(ikasle => {
                    const option = document.createElement('option');
                    option.value = ikasle._id;
                    option.textContent = ikasle.email;
                    ikasleEmail.appendChild(option);
                })
            } catch (error) {
                console.error(error);
                document.getElementById('ikasleak').innerText = 'Error fetching Ikasleak.';
            }
        }

        async function createIkasle() {
            try {
                const izena = document.getElementById('izena').value;
                const adina = document.getElementById('adina').value;
                const email = document.getElementById('email').value;

                const response = await fetch('/api/ikasleak', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ izena, adina, email }),
                });

                if (!response.ok) throw new Error('Failed to create Ikasle');
                const data = await response.json();
                document.getElementById('newIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error(error);
                document.getElementById('newIkasle').innerText = 'Error creating Ikasle.';
            }
        }

        async function deleteIkasleByID() {
            try {
                const id = document.getElementById('deleteId').value;

                const response = await fetch(`/api/ikasleak/${id}`, { method: 'DELETE' });
                if (!response.ok) throw new Error('Failed to delete Ikasle');
                const data = await response.json();

                document.getElementById('deletedIkasle').innerText = JSON.stringify(data, null, 2);
            } catch (error) {
                console.error(error);
                document.getElementById('deletedIkasle').innerText = 'Error deleting Ikasle.';
            }
        }

        async function editIkasle() {
    try {
        const id = document.getElementById('ikasleSelect').value;
        if (!id) throw new Error('No ikasle selected.');

        const izena = document.getElementById('nameEdit').value.trim();
        const adina = parseInt(document.getElementById('ageEdit').value.trim(), 10);
        const email = document.getElementById('emailEdit').value.trim();

        if (!izena || isNaN(adina) || !email) {
            throw new Error('All fields are required and must be valid.');
        }

        const payload = { izena, adina, email }; // Debug payload
        console.log('Payload:', payload);

        const response = await fetch(`/api/ikasleak/${id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload),
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || 'Failed to edit Ikasle');
        }

        const data = await response.json();
        document.getElementById('editedIkasle').innerText = `Ikasle updated: ${JSON.stringify(data, null, 2)}`;
    } catch (error) {
        console.error(error);
        document.getElementById('editedIkasle').innerText = `Error: ${error.message}`;
    }
}
    </script>
</body>
</html>